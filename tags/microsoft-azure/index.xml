<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Microsoft Azure on Stuart McColl</title><link>https://stuartmccoll.github.io/tags/microsoft-azure/</link><description>Recent content in Microsoft Azure on Stuart McColl</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 24 Mar 2023 18:30:00 +0100</lastBuildDate><atom:link href="https://stuartmccoll.github.io/tags/microsoft-azure/index.xml" rel="self" type="application/rss+xml"/><item><title>Use PowerShell to retrieve Azure location information</title><link>https://stuartmccoll.github.io/posts/2023-03-24-use-powershell-to-retrieve-azure-location-information/</link><pubDate>Fri, 24 Mar 2023 18:30:00 +0100</pubDate><guid>https://stuartmccoll.github.io/posts/2023-03-24-use-powershell-to-retrieve-azure-location-information/</guid><description>In this post, I&amp;rsquo;ll show you how to retrieve Azure location names using PowerShell; specifically, using the Azure Az PowerShell module.
Install the Azure Az PowerShell module We&amp;rsquo;re going to follow this guide on Microsoft Learn to install the Azure Az PowerShell module.
I&amp;rsquo;m going to assume that you have the latest version of PowerShell installed. If you don&amp;rsquo;t, you can follow this guide on Microsoft Learn.
Run the following command in a PowerShell session:</description></item><item><title>Use Bicep to create a monthly budget in Azure</title><link>https://stuartmccoll.github.io/posts/2023-03-19-use-bicep-to-create-a-monthly-budget-in-azure/</link><pubDate>Sun, 19 Mar 2023 21:00:00 +0100</pubDate><guid>https://stuartmccoll.github.io/posts/2023-03-19-use-bicep-to-create-a-monthly-budget-in-azure/</guid><description>I&amp;rsquo;ve recently started experimenting with Bicep for deploying Azure resources declaratively.
In this post, I&amp;rsquo;ll show you how to create a Bicep file which declares a simple Azure Budget with a monthly alert.
Creating the .bicep file Create a new file, called main.bicep.
The first thing we&amp;rsquo;ll declare in this file is the target scope of any resources that we create. In this case, the Budget we&amp;rsquo;re creating will be created at a Subscription level.</description></item><item><title>Maintain an Azure Container Registry using a PowerShell Azure Function</title><link>https://stuartmccoll.github.io/posts/2022-09-10-maintain-acr-using-azure-function/</link><pubDate>Sat, 10 Sep 2022 23:00:00 +0100</pubDate><guid>https://stuartmccoll.github.io/posts/2022-09-10-maintain-acr-using-azure-function/</guid><description>This year I created a small C# CLI application that scrapes this website and stores the results in Azure Blob Storage. It&amp;rsquo;s essentially a not-very-good version of the the Internet Archive&amp;rsquo;s Wayback Machine, but specific only to this website.
The process happens in two parts. If I merge any pull requests on the website-archiver into main, then a GitHub Actions workflow pushes the latest Docker image to an Azure Container Registry.</description></item><item><title>Push a Docker image to Azure Container Registry using a GitHub Actions workflow</title><link>https://stuartmccoll.github.io/posts/2022-06-11-github-action-to-azure-container-registry/</link><pubDate>Sat, 11 Jun 2022 11:15:00 +0100</pubDate><guid>https://stuartmccoll.github.io/posts/2022-06-11-github-action-to-azure-container-registry/</guid><description>Building and pushing Docker images to Azure Container Registry is simple with a small GitHub Actions workflow.
This blog post assumes you&amp;rsquo;ve got a docker-compose.yml file in your GitHub repository. If you&amp;rsquo;re just using a Dockerfile, you&amp;rsquo;ll need to make a tiny amendment to the Build Docker image step in the push-to-acr.yml file described below.
Microsoft Azure setup/configuration If you&amp;rsquo;re starting fresh, in terms of our Azure setup we&amp;rsquo;ll need:</description></item></channel></rss>